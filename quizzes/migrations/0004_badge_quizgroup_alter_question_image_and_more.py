# Generated by Django 5.2.7 on 2025-10-16 03:39

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('quizzes', '0003_add_quiz_question_sample_size'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Título da Badge')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('image', models.URLField(help_text='URL da imagem da badge (Cloudinary)', max_length=500)),
                ('rule_type', models.CharField(choices=[('percentage', 'Porcentagem de Acertos'), ('percentage_time', 'Porcentagem + Tempo Limite'), ('perfect_score', 'Pontuação Perfeita'), ('streak', 'Sequência de Acertos')], default='percentage', max_length=20, verbose_name='Tipo de Regra')),
                ('min_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Porcentagem mínima de acertos (0-100)', max_digits=5, verbose_name='Porcentagem Mínima')),
                ('max_time_seconds', models.IntegerField(blank=True, help_text='Tempo máximo em segundos (apenas para percentage_time)', null=True, verbose_name='Tempo Máximo (segundos)')),
                ('rarity', models.CharField(choices=[('common', 'Comum'), ('rare', 'Rara'), ('epic', 'Épica'), ('legendary', 'Lendária')], default='common', max_length=20, verbose_name='Raridade')),
                ('points', models.IntegerField(default=10, help_text='Pontos que a badge vale')),
                ('order', models.IntegerField(default=0, help_text='Ordem de exibição')),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Badge',
                'verbose_name_plural': 'Badges',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='QuizGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nome do Grupo')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Quiz Group',
                'verbose_name_plural': 'Quiz Groups',
                'ordering': ['name'],
            },
        ),
        migrations.AlterField(
            model_name='question',
            name='image',
            field=models.URLField(blank=True, help_text='URL da imagem da questão (opcional - use Cloudinary)', max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='question',
            name='text',
            field=models.TextField(verbose_name='Questão'),
        ),
        migrations.AlterField(
            model_name='quizattempt',
            name='question_order',
            field=models.JSONField(default=list, help_text='Ordem das questões [uuid, uuid, ...]'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='quiz_group',
            field=models.ForeignKey(blank=True, help_text='Grupo de quizzes equivalentes (ex: mesmo quiz em vários idiomas)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='quizzes', to='quizzes.quizgroup'),
        ),
        migrations.CreateModel(
            name='QuizGroupBadge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_groups', to='quizzes.badge')),
                ('quiz_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_badges', to='quizzes.quizgroup')),
            ],
            options={
                'verbose_name': 'Quiz Group Badge',
                'verbose_name_plural': 'Quiz Group Badges',
                'ordering': ['quiz_group', 'badge__order'],
                'unique_together': {('quiz_group', 'badge')},
            },
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('score_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('completion_time_seconds', models.IntegerField(blank=True, null=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_achievements', to='quizzes.badge')),
                ('quiz_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges_earned', to='quizzes.quizattempt')),
                ('quiz_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_achievements', to='quizzes.quizgroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Badge',
                'verbose_name_plural': 'User Badges',
                'ordering': ['-earned_at'],
                'indexes': [models.Index(fields=['user', 'badge'], name='quizzes_use_user_id_d2f83d_idx'), models.Index(fields=['user', 'quiz_group'], name='quizzes_use_user_id_1190d0_idx'), models.Index(fields=['badge', 'quiz_group'], name='quizzes_use_badge_i_6086f2_idx'), models.Index(fields=['-earned_at'], name='quizzes_use_earned__035320_idx')],
                'unique_together': {('user', 'badge', 'quiz_group')},
            },
        ),
    ]

# Generated by Django 5.2.7 on 2025-10-18 00:55

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='TÃ­tulo da Badge')),
                ('description', models.TextField(blank=True, verbose_name='DescriÃ§Ã£o (fallback)')),
                ('description_translations', models.JSONField(blank=True, default=dict, help_text='TraduÃ§Ãµes da descriÃ§Ã£o: {"pt-BR": "texto", "en-US": "text", ...}')),
                ('image', models.URLField(help_text='URL da imagem da badge (Cloudinary)', max_length=500)),
                ('rule_type', models.CharField(choices=[('percentage', 'Porcentagem de Acertos'), ('percentage_time', 'Porcentagem + Tempo Limite'), ('perfect_score', 'PontuaÃ§Ã£o Perfeita'), ('streak', 'SequÃªncia de Acertos')], default='percentage', max_length=20, verbose_name='Tipo de Regra')),
                ('min_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Porcentagem mÃ­nima de acertos (0-100)', max_digits=5, verbose_name='Porcentagem MÃ­nima')),
                ('rarity', models.CharField(choices=[('common', 'Comum'), ('rare', 'Rara'), ('epic', 'Ã‰pica'), ('legendary', 'LendÃ¡ria')], default='common', max_length=20, verbose_name='Raridade')),
                ('points', models.IntegerField(default=10, help_text='Pontos que a badge vale')),
                ('order', models.IntegerField(default=0, help_text='Ordem de exibiÃ§Ã£o')),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Badge',
                'verbose_name_plural': 'Badges',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField(verbose_name='QuestÃ£o')),
                ('image', models.URLField(blank=True, help_text='URL da imagem da questÃ£o (opcional - use Cloudinary)', max_length=500, null=True)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['quiz', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('description', models.TextField()),
                ('description_template', models.TextField(blank=True, help_text='Template de descriÃ§Ã£o com placeholders {sample_size} e {total}. Ex: "Identifique {sample_size} personagens de {total} disponÃ­veis"')),
                ('difficulty', models.CharField(choices=[('easy', 'FÃ¡cil'), ('medium', 'MÃ©dio'), ('hard', 'DifÃ­cil')], default='medium', max_length=10)),
                ('country', models.CharField(choices=[('en-US', 'ðŸ‡ºðŸ‡¸ United States'), ('en-CA', 'ðŸ‡¨ðŸ‡¦ Canada'), ('es-MX', 'ðŸ‡²ðŸ‡½ Mexico'), ('en-GB', 'ðŸ‡¬ðŸ‡§ United Kingdom'), ('es-ES', 'ðŸ‡ªðŸ‡¸ Spain'), ('pt-PT', 'ðŸ‡µðŸ‡¹ Portugal'), ('en-IN', 'ðŸ‡®ðŸ‡³ India'), ('en-PH', 'ðŸ‡µðŸ‡­ Philippines'), ('en-AU', 'ðŸ‡¦ðŸ‡º Australia'), ('en-NZ', 'ðŸ‡³ðŸ‡¿ New Zealand'), ('pt-BR', 'ðŸ‡§ðŸ‡· Brazil'), ('es-AR', 'ðŸ‡¦ðŸ‡· Argentina'), ('es-CO', 'ðŸ‡¨ðŸ‡´ Colombia')], default='pt-BR', help_text='PaÃ­s do quiz', max_length=10)),
                ('question_sample_size', models.IntegerField(default=0, help_text='NÃºmero de questÃµes aleatÃ³rias a serem selecionadas (0 = usar todas)')),
                ('active', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
                'ordering': ['theme', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='QuizGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nome do Grupo')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='DescriÃ§Ã£o')),
                ('difficulty', models.CharField(choices=[('easy', 'FÃ¡cil'), ('medium', 'MÃ©dio'), ('hard', 'DifÃ­cil')], default='medium', help_text='Dificuldade do grupo (aplicada a todos os quizzes do grupo)', max_length=10)),
                ('order', models.IntegerField(default=0, help_text='Ordem de exibiÃ§Ã£o dos quizzes deste grupo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Quiz Group',
                'verbose_name_plural': 'Quiz Groups',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=500, verbose_name='Alternativa')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Ã‰ a resposta correta?')),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='quizzes.question')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
                'ordering': ['question', 'order'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='quizzes.quiz'),
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_key', models.CharField(blank=True, help_text='Para usuÃ¡rios nÃ£o logados', max_length=40)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('question_order', models.JSONField(default=list, help_text='Ordem das questÃµes [uuid, uuid, ...]')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('score', models.IntegerField(default=0)),
                ('max_score', models.IntegerField(default=0)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='quizzes.quiz')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Quiz Attempt',
                'verbose_name_plural': 'Quiz Attempts',
                'ordering': ['-started_at'],
            },
        ),
        migrations.AddField(
            model_name='quiz',
            name='quiz_group',
            field=models.ForeignKey(blank=True, help_text='Grupo de quizzes equivalentes (ex: mesmo quiz em vÃ¡rios idiomas)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='quizzes', to='quizzes.quizgroup'),
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('slug', models.SlugField(max_length=255, primary_key=True, serialize=False)),
                ('icon', models.URLField(blank=True, help_text='URL da imagem do Ã­cone (PNG, SVG, etc - use Cloudinary)', max_length=500, null=True)),
                ('country', models.CharField(choices=[('en-US', 'ðŸ‡ºðŸ‡¸ United States'), ('en-CA', 'ðŸ‡¨ðŸ‡¦ Canada'), ('es-MX', 'ðŸ‡²ðŸ‡½ Mexico'), ('en-GB', 'ðŸ‡¬ðŸ‡§ United Kingdom'), ('es-ES', 'ðŸ‡ªðŸ‡¸ Spain'), ('pt-PT', 'ðŸ‡µðŸ‡¹ Portugal'), ('en-IN', 'ðŸ‡®ðŸ‡³ India'), ('en-PH', 'ðŸ‡µðŸ‡­ Philippines'), ('en-AU', 'ðŸ‡¦ðŸ‡º Australia'), ('en-NZ', 'ðŸ‡³ðŸ‡¿ New Zealand'), ('pt-BR', 'ðŸ‡§ðŸ‡· Brazil'), ('es-AR', 'ðŸ‡¦ðŸ‡· Argentina'), ('es-CO', 'ðŸ‡¨ðŸ‡´ Colombia')], default='pt-BR', help_text='PaÃ­s do tema', max_length=10)),
                ('primary_color', models.CharField(blank=True, help_text='Cor principal (ex: #3b82f6)', max_length=7, null=True)),
                ('secondary_color', models.CharField(blank=True, help_text='Cor secundÃ¡ria para gradiente (ex: #8b5cf6)', max_length=7, null=True)),
                ('order', models.IntegerField(default=0, help_text='Ordem de exibiÃ§Ã£o')),
                ('active', models.BooleanField(default=True)),
                ('card_background_image', models.URLField(blank=True, help_text='URL da imagem de background do CARD/CAIXA do tema (use Cloudinary)', max_length=500, null=True)),
                ('card_background_color', models.CharField(blank=True, help_text='Cor de fundo do CARD/CAIXA (ex: #FF0000 ou linear-gradient(...))', max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, help_text='Tema pai (deixe vazio para categoria principal)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='quizzes.theme')),
            ],
            options={
                'verbose_name': 'Theme',
                'verbose_name_plural': 'Themes',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.AddField(
            model_name='quiz',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='quizzes.theme'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='TÃ­tulo do Produto')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='PreÃ§o')),
                ('discount_percentage', models.IntegerField(default=0, help_text='Desconto em porcentagem (0-100). Use 0 para sem desconto.', verbose_name='Porcentagem de Desconto')),
                ('image_url', models.URLField(max_length=500, verbose_name='URL da Imagem (use Cloudinary)')),
                ('product_url', models.URLField(max_length=500, verbose_name='Link do Produto')),
                ('active', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0, help_text='Ordem de exibiÃ§Ã£o')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='quizzes.theme')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['theme', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='QuizGroupBadge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_groups', to='quizzes.badge')),
                ('quiz_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_badges', to='quizzes.quizgroup')),
            ],
            options={
                'verbose_name': 'Quiz Group Badge',
                'verbose_name_plural': 'Quiz Group Badges',
                'ordering': ['quiz_group', 'badge__order'],
                'unique_together': {('quiz_group', 'badge')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='quiz',
            unique_together={('theme', 'slug')},
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_correct', models.BooleanField(default=False)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to='quizzes.quizattempt')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.question')),
                ('selected_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.answer')),
            ],
            options={
                'verbose_name': 'User Answer',
                'verbose_name_plural': 'User Answers',
                'ordering': ['answered_at'],
                'unique_together': {('attempt', 'question')},
            },
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('score_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('completion_time_seconds', models.IntegerField(blank=True, null=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_achievements', to='quizzes.badge')),
                ('quiz_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges_earned', to='quizzes.quizattempt')),
                ('quiz_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_achievements', to='quizzes.quizgroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Badge',
                'verbose_name_plural': 'User Badges',
                'ordering': ['-earned_at'],
                'indexes': [models.Index(fields=['user', 'badge'], name='quizzes_use_user_id_d2f83d_idx'), models.Index(fields=['user', 'quiz_group'], name='quizzes_use_user_id_1190d0_idx'), models.Index(fields=['badge', 'quiz_group'], name='quizzes_use_badge_i_6086f2_idx'), models.Index(fields=['-earned_at'], name='quizzes_use_earned__035320_idx')],
                'unique_together': {('user', 'badge', 'quiz_group')},
            },
        ),
    ]
